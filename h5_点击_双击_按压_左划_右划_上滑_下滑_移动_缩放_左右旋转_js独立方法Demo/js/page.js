sSina.page = function(){
    // 效果
    function animate($obj){
        $.s_com.transFormForAll($obj,{"duraV":200,"property":"transform,opacity","scaleX":0.2,"scaleY":0.2,"alpha":"0.2"});
        setTimeout(function(){
            $.s_com.transFormForAll($obj,{"duraV":200,"property":"transform,opacity","scaleX":1,"scaleY":1,"alpha":1});
        },200);
    }


    // 单击
    // 点透的问题已经搞定，根本原因是click延迟问题,touchend要早于click执行,所以，如果在touchend中隐藏了当前点击的元素，点击行为会作用到下边的元素上,可以在touchstart和touchend中阻止默认行为:$.s_com.preventDefault(e);
    $(".click").gesture({
        ////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸的那个点的坐标{"x":坐标值,"y":坐标值}
        ////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            $(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ////////////////////////////////
        /// 参数tap有两个值:"tap"和"doubletap",分别表示单击和双击
        ////////////////////////////////
        "tap":function(tap,e,p1,p2){
            if(tap=="tap"){
                $(".stage").text("你单击了");

                animate($(".stage"));
            }
        }, // 快速点击  
        "tapTime": 100, // 传入这个值可以设置是否响应快速点击(单位:毫秒,默认200),越小则表示越快速响应
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸开始的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,p1,p2){
            $(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });


    // 双击
    $("#doubliclick").gesture({
        ////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸的那个点的坐标{"x":坐标值,"y":坐标值}
        ////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            $(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ////////////////////////////////
        /// 参数tap有两个值:"tap"和"doubletap",分别表示单击和双击
        ////////////////////////////////
        "tap":function(tap,e,p1,p2){
            if(tap=="doubletap"){
                $(".stage").text("你双击了");
                animate($(".stage"));
            }
        }, // 快速点击  
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸开始的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,p1,p2){
            //$(".stage").text("触摸结束");
        }, // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
        "doubleTap" : true // 配置双击是否响应
    });


// 按压
    $("#press").gesture({
        ////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸的那个点的坐标{"x":坐标值,"y":坐标值}
        ////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            //$(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        "press":function(e,p1,p2){
            // 阻止默认行为
            $.s_com.preventDefault(e);

            $(".stage").text("你按压了");
            animate($(".stage"));
        }, // 快速点击  
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸开始的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,p1,p2){
            //$(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });

// 左划
    $("#swipeleft").gesture({
        ////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸的那个点的坐标{"x":坐标值,"y":坐标值}
        ////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            //$(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "swipe":{
            "left": function(e,p1,p2){
                // swipe在手指滑动的同时执行,所以一次滑屏动作多次执行,如果滑屏只需要执行一次,那么就在end中执行(在不同的地方设置滑屏方向)
                // 阻止默认行为
                $.s_com.preventDefault(e);

                $(".stage").text("你左划了"+"左划距离"+(p2.x-p1.x));
                animate($(".stage"));
            }
        },
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸开始的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,p1,p2){
            //$(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });
// 右划
    $("#swiperight").gesture({
        ////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示开始触摸的那个点的坐标{"x":坐标值,"y":坐标值}
        ////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            //$(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "swipe":{
            "right": function(e,p1,p2){
                // swipe在手指滑动的同时执行,所以一次滑屏动作多次执行,如果滑屏只需要执行一次,那么就在end中执行(在不同的地方设置滑屏方向)
                // 阻止默认行为
                $.s_com.preventDefault(e);
                $(".stage").text("你右划了"+"右划距离"+(p2.x-p1.x));
                animate($(".stage"));
            }
        },
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸开始的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,p1,p2){
            //$(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });
// 上划
    $("#swipeup").gesture({
        ////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示开始触摸的那个点的坐标{"x":坐标值,"y":坐标值}
        ////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            //$(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "swipe":{
            "up": function(e,p1,p2){
                // swipe在手指滑动的同时执行,所以一次滑屏动作多次执行,如果滑屏只需要执行一次,那么就在end中执行(在不同的地方设置滑屏方向)
                // 阻止默认行为
                $.s_com.preventDefault(e);

                $(".stage").text("你上划了"+"上滑距离"+(p2.y-p1.y));
                animate($(".stage"));
            }
        },
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸开始的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,p1,p2){
            //$(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });
// 下划
    $("#swipedown").gesture({
        ////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示开始触摸的那个点的坐标{"x":坐标值,"y":坐标值}
        ////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            //$(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件
        /// 参数p1表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "swipe":{
            "down": function(e,p1,p2){
                // swipe在手指滑动的同时执行,所以一次滑屏动作多次执行,如果滑屏只需要执行一次,那么就在end中执行(在不同的地方设置滑屏方向)
                // 阻止默认行为
                $.s_com.preventDefault(e);

                $(".stage").text("你下划了"+"下滑距离"+(p2.y-p1.y));
                animate($(".stage"));

            }// 下划
        },
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸开始的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,p1,p2){
            //$(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });
// 移动
    $("#drag").gesture({
        ////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示开始触摸的那个点的坐标{"x":坐标值,"y":坐标值}
        ////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            // 阻止默认行为
            $.s_com.preventDefault(e);
            $(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸过程中的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "drag":function(e,p1,p2){
            // 阻止默认行为
            $.s_com.preventDefault(e);

            $(".stage").text("你移动了"+"x轴移动"+(p2.x-p1.x)+"y轴移动"+(p2.y-p1.y));
            animate($(".stage"));
        }, // 移动,拖动
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数p1表示触摸开始的那个点的坐标{"x":坐标值,"y":坐标值}
        /// 参数p2表示触摸结束的那个点的坐标{"x":坐标值,"y":坐标值}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,p1,p2){
            $(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });

// 缩放
    $("#zoom").gesture({
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示开始触摸的那两个个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "touchstart":function(e,p1){
            // 阻止默认行为
            $.s_com.preventDefault(e);
                      
            //$(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示触摸过程中的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        /// 参数nowSub表示触摸过程中的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        /// 参数zoomRatio 新的两点之间的距离/旧的两点之间的距离
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "zoom":function(e,statSub,nowSub,zoomRatio){
            // 只有当手指有偏移才会有缩放
            if(Math.abs(nowSub.x1 - statSub.x1) > 3 || Math.abs(nowSub.y1 - statSub.y1) >3 || Math.abs(nowSub.x2 - statSub.x2) > 3 || Math.abs(nowSub.y2 - statSub.y2) >3){  
                // 默认行为默认被阻止
                if(zoomRatio >= 1){
                    $(".stage").text("你正在放大");
                    // 我们可以根据zoomRatio的值来决定如何缩放以及缩放比例
                    // 比如放大:原来的值 + zoomRatio*10

                }else{
                    $(".stage").text("你正在缩小");
                    // 我们可以根据zoomRatio的值来决定如何缩放以及缩放比例
                    // 缩小:原来的值 - zoomRatio*10

                }
            }

            animate($(".stage"));
        }, // 缩放
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示触摸的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        /// 参数nowSub表示触摸结束的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,statSub,nowSub){
            //$(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });

// 左旋转
    $("#rotatel").gesture({
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示开始触摸的那两个个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "touchstart":function(e,statSub){
            // 阻止默认行为
            $.s_com.preventDefault(e);
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示触摸过程中的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        /// 参数nowSub表示触摸过程中的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "rotateL":function(e,statSub,nowSub){
            // 默认行为默认被阻止
            $(".stage").text("你正在向左旋转");
            // 我们不需要知道旋转了多少,而可以自己决定
            // 比如放大:原来的角度值 - 2 就是每一个左旋转都减少2个角度值

            animate($(".stage"));
        }, // 移动,拖动
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示触摸的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        /// 参数nowSub表示触摸结束的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,statSub,nowSub){
            //$(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });
// 右旋转
    $("#rotater").gesture({
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示开始触摸的那两个个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "touchstart":function(e,statSub){
            // 阻止默认行为
            $.s_com.preventDefault(e);
            //$(".stage").text("触摸开始");
        }, // touch的传入方法,如果有特殊需求,可以配置并写touchstart相关逻辑
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示触摸过程中的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        /// 参数nowSub表示触摸过程中的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "rotateR":function(e,statSub,nowSub){
            // 默认行为默认被阻止
            $(".stage").text("你正在向右旋转");
            // 我们不需要知道旋转了多少,而可以自己决定
            // 比如放大:原来的角度值 + 2 就是每一个左旋转都减少2个角度值

            animate($(".stage"));
        }, // 移动,拖动
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// 参数e表示事件,
        /// 参数statSub表示触摸的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        /// 参数nowSub表示触摸结束的那两个点的坐标{"x1":坐标值,"y1":坐标值,"x2":坐标值,"y2":坐标值,"zValue":两点之间的距离}
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
        "end" : function(e,statSub,nowSub){
            //$(".stage").text("触摸结束");
        } // 离开touchend,touchcancel,mouseup,mouseout,如果有特殊需求,可以配置并写touchend相关逻辑
    });
 };

